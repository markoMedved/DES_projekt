

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gen is
 port (
   clk : in std_logic;
   data : out signed(7 downto 0);
   korak : in unsigned(15 downto 0);
   en : in std_logic );
end gen;

architecture RTL of gen is
 signal st : unsigned(15 downto 0) := to_unsigned(0,16);
 signal adr : unsigned(3 downto 0);
 type tab_type is array (0 to 15) of signed(7 downto 0);
 constant tab : tab_type := (
   0=> "00000110",
   1=> "00010110",
   2=> "00100101",
   3=> "00110000",
   4=> "00111100",
   5=> "01000111",
   6=> "01010001",
   7=> "01011010",
   8=> "01100010",
   9=> "01101001",
   10=> "01110000",
   11=> "01110101",
   12=> "01111010",
   13=> "01111100",
   14=> "01111110",
   15=> "01111111");
begin

process(st)
begin
  if st(14) = '1' then
     adr <= not st(13 downto 10);
  else
     adr <= st(13 downto 10);
  end if;
  data <= tab(to_integer(adr));
  if st(15) /= '0' then
     data <= - tab(to_integer(adr));
  end if;
end process;

process(clk)
begin
 if rising_edge(clk) then
  if en = '1' then
     st <= st + korak;
  end if;
 end if;
end process;

end RTL;

